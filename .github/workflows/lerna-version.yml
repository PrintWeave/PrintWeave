name: Publish new version
on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: 'Version to publish'
        default: 'patch'
        options:
          - ''
          - 'major'
          - 'minor'
          - 'patch'
          - 'premajor'
          - 'preminor'
          - 'prepatch'
          - 'prerelease'
      preid:
        type: choice
        description: 'Prerelease identifier'
        required: false
        options:
          - ''
          - 'alpha'
          - 'beta'
          - 'rc'
      conventionalGraduate:
        type: boolean
        description: 'Use --conventional-graduate flag'
        required: false
        default: false

permissions:
  contents: write
  packages: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @lerna-lite/cli @lerna-lite/version @lerna-lite/publish conventional-changelog-conventionalcommits
      - name: Build packages
        run: npm run build

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Set distribution tag
        id: set-distribution-tag
        run: |
          if [[ "${{ github.event.inputs.version }}" == "prerelease" || \
                "${{ github.event.inputs.version }}" == "premajor" || \
                "${{ github.event.inputs.version }}" == "preminor" || \
                "${{ github.event.inputs.version }}" == "prepatch" ]]; then
            echo "dist_tag=next" >> $GITHUB_OUTPUT
          else
            echo "dist_tag=latest" >> $GITHUB_OUTPUT
          fi
      - name: Update version, no --preid
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preid == '' }}
        run: |
          # Update version in lerna.json
          lerna version ${{ github.event.inputs.version }} \
            ${{ github.event.inputs.conventionalGraduate && '--conventional-graduate' || '' }} \
            --create-release github --yes
      - name: Update version, with --preid
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event.inputs.preid != '' }}
        run: |
          # Update version in lerna.json
          lerna version ${{ github.event.inputs.version }} \
            --preid ${{ github.event.inputs.preid }} \
            ${{ github.event.inputs.conventionalGraduate && '--conventional-graduate' || '' }} \
            --create-release github --yes

      - name: Publish packages
        run: |
          # Publish packages to npm
          lerna publish from-git --dist-tag ${{ steps.set-distribution-tag.outputs.dist_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
